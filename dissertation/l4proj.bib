
@inproceedings{milazzo_case_2015,
	title = {Case {Studies} of {Application} of {Probabilistic} and {Statistical} {Model} {Checking} in {Game} {Design}},
	doi = {10.1109/GAS.2015.13},
	abstract = {We propose probabilistic/statistical model checking as a tool for game design. Models of games under design can be used for the early evaluation of properties related with game duration, existence of different successful strategies, and balancing of the game core mechanics. To show the usefulness of model checking in game design we consider and develop three case studies in which model checking is used to answer specific game design questions.},
	booktitle = {2015 {IEEE}/{ACM} 4th {International} {Workshop} on {Games} and {Software} {Engineering}},
	author = {Milazzo, Paolo and Pardini, Giovanni and Sestini, Dario and Bove, Pasquale},
	month = may,
	year = {2015},
	keywords = {Boards, Collaboration, computer games, formal verification, game core mechanics, game design questions, Games, Model checking, Probabilistic logic, probabilistic model checking, Probability, statistical analysis, statistical model checking, Tracking},
	pages = {29--35},
	file = {Submitted Version:C\:\\Users\\Lewis\\Zotero\\storage\\X63N22L6\\Milazzo et al. - 2015 - Case Studies of Application of Probabilistic and S.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\Lewis\\Zotero\\storage\\8EQRH573\\7169466.html:text/html}
}

@inproceedings{kavanagh_balancing_2019,
	title = {Balancing {Turn}-{Based} {Games} with {Chained} {Strategy} {Generation}},
	doi = {10.1109/tg.2019.2943227},
	abstract = {Probabilistic model checking can overcome much of the complexity inherent in balancing games. Game balancing is the careful maintenance of relationships between the ways in which a game can be played, to ensure no single way is strictly better than all others and that players are offered a wide variety of ways to play successfully. We introduce a novel approach towards automating game balancing using probabilistic model checking called chained strategy generation (CSG). This involves generating chains of adversarial strategies which mimic the way players adapt their approach during repeated plays of a game. We use CSG to map out the evolving metagame. The trends identified can allow game developers to identify strategies which will be too strong and ways of playing the game which a player may want to use, but are never viable for successful competitive play. We introduce a case study, a game called RPGLite, and use CSG to compare five candidate configurations for the game. We show how to determine which configurations of RPGLite lead to a more fair and interesting experience for players. We also identify unexpected trends in how the strategies evolve. Our approach introduces a new technique for improving game development and player experience.},
	author = {Kavanagh, W. and Miller, A. and Norman, G. and Andrei, Oana},
	year = {2019},
	file = {Full Text PDF:C\:\\Users\\Lewis\\Zotero\\storage\\VEBIMRZZ\\Kavanagh et al. - 2019 - Balancing Turn-Based Games with Chained Strategy G.pdf:application/pdf}
}

@inproceedings{jaffe_evaluating_2012,
	address = {Stanford, California, USA},
	series = {{AIIDE}'12},
	title = {Evaluating competitive game balance with restricted play},
	abstract = {Game balancing is the fine-tuning phase in which a functioning game is adjusted to be deep, fair, and interesting. Balancing is difficult and time-consuming, as designers must repeatedly tweak parameters, and run lengthy playtests to evaluate the effects of these changes. If designers could receive immediate feedback on their designs, they could explore a vast space of variations, and select only the most promising games for playtesting. Such automated design feedback has been difficult to achieve, as there is no mathematical formulation of game balance that unifies many of its forms. We argue for a formulation in which carefully restricted agents are played against standard agents. We develop this restricted-play balance framework, and evaluate its utility by building a tool capable of calculating measures of balance for a large family of games. By applying this tool to an educational card game, we demonstrate how the framework and tool allow designers to rapidly evaluate and iterate on the balance of their games.},
	urldate = {2020-10-20},
	booktitle = {Proceedings of the {Eighth} {AAAI} {Conference} on {Artificial} {Intelligence} and {Interactive} {Digital} {Entertainment}},
	publisher = {AAAI Press},
	author = {Jaffe, Alexander and Miller, Alex and Andersen, Erik and Liu, Yun-En and Karlin, Anna and Popović, Zoran},
	month = oct,
	year = {2012},
	pages = {26--31},
	file = {Full Text:C\:\\Users\\Lewis\\Zotero\\storage\\LGPZ44TS\\Jaffe et al. - 2012 - Evaluating competitive game balance with restricte.pdf:application/pdf}
}

@inproceedings{hom_automatic_2007,
	address = {Stanford, California},
	series = {{AIIDE}'07},
	title = {Automatic design of balanced board games},
	abstract = {AI techniques are already widely used in game software to provide computer-controlled opponents for human players. However, game design is a more-challenging problem than game play. Designers typically expend great effort to ensure that their games are balanced and challenging. Dynamic game-balancing techniques have been developed to modify a game-engine's parameters in response to user play. In this paper we describe a first attempt at using AI techniques to design balanced board games like checkers and Go by modifying the rules of the game, not just the rule parameters. Our approach involves the use of a commercial general game-playing (GGP) engine that plays according to rules that are specified in a general game-definition language. We use a genetic algorithm (GA) to search the space of game rules, looking for turn-based board games that are well balanced, i.e., those that the GGP engine in self-play finds equally hard to win from either side and rarely draws. The GA finds better games than a random-search strategy that uses equivalent computational effort.},
	urldate = {2020-11-19},
	booktitle = {Proceedings of the {Third} {AAAI} {Conference} on {Artificial} {Intelligence} and {Interactive} {Digital} {Entertainment}},
	publisher = {AAAI Press},
	author = {Hom, Vincent and Marks, Joe},
	month = jun,
	year = {2007},
	pages = {25--30}
}

@article{hansson_logic_1994,
	title = {A logic for reasoning about time and reliability},
	volume = {6},
	issn = {1433-299X},
	url = {https://doi.org/10.1007/BF01211866},
	doi = {10.1007/BF01211866},
	abstract = {We present a logic for stating properties such as, “after a request for service there is at least a 98\% probability that the service will be carried out within 2 seconds”. The logic extends the temporal logic CTL by Emerson, Clarke and Sistla with time and probabilities. Formulas are interpreted over discrete time Markov chains. We give algorithms for checking that a given Markov chain satisfies a formula in the logic. The algorithms require a polynomial number of arithmetic operations, in size of both the formula and the Markov chain. A simple example is included to illustrate the algorithms.},
	language = {en},
	number = {5},
	urldate = {2021-01-29},
	journal = {Formal Aspects of Computing},
	author = {Hansson, Hans and Jonsson, Bengt},
	month = sep,
	year = {1994},
	pages = {512--535},
	file = {Springer Full Text PDF:C\:\\Users\\Lewis\\Zotero\\storage\\5EER7QCY\\Hansson and Jonsson - 1994 - A logic for reasoning about time and reliability.pdf:application/pdf}
}

@inproceedings{kwiatkowska_stochastic_2007,
	title = {Stochastic model checking},
	booktitle = {International {School} on {Formal} {Methods} for the {Design} of {Computer}, {Communication} and {Software} {Systems}},
	publisher = {Springer},
	author = {Kwiatkowska, Marta and Norman, Gethin and Parker, David},
	year = {2007},
	pages = {220--270},
	file = {Full Text:C\:\\Users\\Lewis\\Zotero\\storage\\JYZ3ZMCI\\Kwiatkowska et al. - 2007 - Stochastic model checking.pdf:application/pdf;Snapshot:C\:\\Users\\Lewis\\Zotero\\storage\\8NECKCSJ\\978-3-540-72522-0_6.html:text/html}
}

@inproceedings{kwiatkowska_prism_2011,
	title = {{PRISM} 4.0: {Verification} of probabilistic real-time systems},
	shorttitle = {{PRISM} 4.0},
	booktitle = {International conference on computer aided verification},
	publisher = {Springer},
	author = {Kwiatkowska, Marta and Norman, Gethin and Parker, David},
	year = {2011},
	pages = {585--591},
	file = {Full Text:C\:\\Users\\Lewis\\Zotero\\storage\\WWECBGSG\\Kwiatkowska et al. - 2011 - PRISM 4.0 Verification of probabilistic real-time.pdf:application/pdf;Snapshot:C\:\\Users\\Lewis\\Zotero\\storage\\5V4A85AU\\978-3-642-22110-1_47.html:text/html}
}

@misc{noauthor_prism_nodate,
	title = {{PRISM} {Manual} {\textbar} {Main} / {Welcome}},
	url = {http://www.prismmodelchecker.org/manual/},
	urldate = {2021-02-25},
	file = {PRISM Manual | Main / Welcome:C\:\\Users\\Lewis\\Zotero\\storage\\WEV69EWC\\manual.html:text/html}
}

@inproceedings{forejt_automated_2011,
	title = {Automated verification techniques for probabilistic systems},
	booktitle = {International school on formal methods for the design of computer, communication and software systems},
	publisher = {Springer},
	author = {Forejt, Vojtěch and Kwiatkowska, Marta and Norman, Gethin and Parker, David},
	year = {2011},
	pages = {53--113},
	file = {Full Text:C\:\\Users\\Lewis\\Zotero\\storage\\BMTURA8B\\Forejt et al. - 2011 - Automated verification techniques for probabilisti.pdf:application/pdf;Snapshot:C\:\\Users\\Lewis\\Zotero\\storage\\R987GJX8\\978-3-642-21455-4_3.html:text/html}
}

@article{kavanagh_gameplay_2020,
	title = {Gameplay {Analysis} of {Multiplayer} {Games} with {Verified} {Action}-{Costs}},
	journal = {The Computer Games Journal},
	author = {Kavanagh, William and Miller, Alice},
	year = {2020},
	note = {Publisher: Springer},
	pages = {1--22},
	file = {Full Text:C\:\\Users\\Lewis\\Zotero\\storage\\76QPFVRT\\s40869-020-00121-5.html:text/html}
}

@misc{wikipedia_deutsch_2006,
	title = {Deutsch:  {Shut} the {Box}},
	copyright = {Public domain},
	shorttitle = {Deutsch},
	url = {https://commons.wikimedia.org/wiki/File:Shut_the_box.jpg},
	urldate = {2021-03-16},
	author = {Wikipedia, Roland Scheicher / Roland Scheicher at German},
	month = jul,
	year = {2006},
	file = {Wikimedia Snapshot:C\:\\Users\\Lewis\\Zotero\\storage\\CK7PSLYL\\FileShut_the_box.html:text/html}
}

@incollection{chatterjee_value_2008,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Value {Iteration}},
	isbn = {978-3-540-69850-0},
	url = {https://doi.org/10.1007/978-3-540-69850-0_7},
	abstract = {We survey value iteration algorithms on graphs. Such algorithms can be used for determining the existence of certain paths (model checking), the existence of certain strategies (game solving), and the probabilities of certain events (performance analysis). We classify the algorithms according to the value domain (boolean, probabilistic, or quantitative); according to the graph structure (nondeterministic, probabilistic, or multi-player); according to the desired property of paths (Borel level 1, 2, or 3); and according to the alternation depth and convergence rate of fixpoint computations.},
	language = {en},
	urldate = {2021-03-16},
	booktitle = {25 {Years} of {Model} {Checking}: {History}, {Achievements}, {Perspectives}},
	publisher = {Springer},
	author = {Chatterjee, Krishnendu and Henzinger, Thomas A.},
	editor = {Grumberg, Orna and Veith, Helmut},
	year = {2008},
	doi = {10.1007/978-3-540-69850-0_7},
	keywords = {Improvement Function, Linear Temporal Logic, Model Check, Reward Function, Stochastic Game},
	pages = {107--138},
	file = {Springer Full Text PDF:C\:\\Users\\Lewis\\Zotero\\storage\\AJE6ULG9\\Chatterjee and Henzinger - 2008 - Value Iteration.pdf:application/pdf}
}

@article{haddad_interval_2018,
	title = {Interval {Iteration} {Algorithm} for {MDPs} and {IMDPs}},
	volume = {735},
	url = {https://hal.archives-ouvertes.fr/hal-01809094},
	doi = {10.1016/j.tcs.2016.12.003},
	abstract = {Markov Decision Processes (MDP) are a widely used model including both non-deterministic and probabilistic choices. Minimal and maximal probabilities to reach a target set of states, with respect to a policy resolving non-determinism, may be computed by several methods including value iteration. This algorithm, easy to implement and efficient in terms of space complexity, iteratively computes the probabilities of paths of increasing length. However, it raises three issues: (1) defining a stopping criterion ensuring a bound on the approximation, (2) analysing the rate of convergence, and (3) specifying an additional procedure to obtain the exact values once a sufficient number of iterations has been performed. The first two issues are still open and, for the third one, an upper bound on the number of iterations has been proposed. Based on a graph analysis and transformation of MDPs, we address these problems. First we introduce an interval iteration algorithm, for which the stopping criterion is straightforward. Then we exhibit its convergence rate. Finally we significantly improve the upper bound on the number of iterations required to get the exact values. We extend our approach to also deal with Interval Markov Decision Processes (IMDP) that can be seen as symbolic representations of MDPs.},
	urldate = {2021-03-17},
	journal = {Theoretical Computer Science},
	author = {Haddad, Serge and Monmege, Benjamin},
	month = jul,
	year = {2018},
	note = {Publisher: Elsevier},
	keywords = {Markov decision processes, stochastic verification, value iteration},
	pages = {111 -- 131},
	file = {HAL PDF Full Text:C\:\\Users\\Lewis\\Zotero\\storage\\I62JAAWE\\Haddad and Monmege - 2018 - Interval Iteration Algorithm for MDPs and IMDPs.pdf:application/pdf}
}
