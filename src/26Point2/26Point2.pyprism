// Manual model for 26 Point 2
// 2 players, 4d6 each, 30 spaces.

csg

@26Point2/csg_players players@

const int no_spaces; // goal space to win game

@26Point2/end_formulas players@

@26Point2/pair_formulas players no_sides@

@26Point2/bust_formulas players no_sides@

@26Point2/move_formulas players no_sides@

@26Point2/endpos_formulas players@


@26Point2/def_player p1 no_sides no_dice strategy1@

@26Point2/def_player p2 no_sides no_dice strategy2@


module board
    // Local state:
    // 0: choosing how many dice to roll
    // 1: rolling dice
    // 2: Moving (if allowed!)
    // 3: Deciding if there's a winner
    // 4: game over
    state : [0..4] init 0;
    
    @26Point2/winner players@

    [] state=0 -> (state'=1);
    [] state=1 -> (state'=2);
    [] state=2 -> (state'=3);
    [] state=3 & !game_over -> (state'=0);

    [] state=3 & game_over & p1_end_pos=max_space & !p2_end_pos=max_space -> (state'=4) & (winner'=1);
    [] state=3 & game_over & p2_end_pos=max_space & !p1_end_pos=max_space -> (state'=4) & (winner'=2);
    [] state=3 & game_over & p1_end_pos=max_space & p2_end_pos=max_space -> 0.5 : (state'=4) & (winner'=1) + 0.5 :(state'=4) & (winner'=2);
    
    [] state=4 -> (state'=4);

endmodule


@26Point2/winner_labels players@

label "game_over" = (state=4);

label "players_tie" = (state=4) & (p1_end_pos=p2_end_pos);

@26Point2/bust_labels players@

rewards "no_rounds"
	(state=1) : 1;
endrewards


@26Point2/bust_rewards players@